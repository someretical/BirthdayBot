generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Guild {
  id                  String  @id @db.VarChar(32)
  birthdays_enabled   Boolean @default(false)
  birthday_role_id    String? @db.VarChar(32)
  birthday_channel_id String? @db.VarChar(32)
  birthday_message    String  @default("ðŸŽ‰ðŸŽ‰ðŸŽ‰ Happy Birthday {user}!") @db.VarChar(1024)
}

model User {
  id                       String           @id @db.VarChar(32)
  birthday_start_month     Int
  birthday_start_day       Int
  birthday_start_hour      Int
  birthday_start_minute    Int
  birthday_utc_offset      Int
  accept_birthday_messages Boolean          @default(true)
  PrivateMessageSenders    PrivateMessage[] @relation(name: "PrivateMessageSenders")
  PrivateMessageReceivers  PrivateMessage[] @relation(name: "PrivateMessageReceivers")
  PublicMessageSenders     PublicMessage[]  @relation(name: "PublicMessageSenders")
  PublicMessageReceivers   PublicMessage[]  @relation(name: "PublicMessageReceivers")
}

model PrivateMessage {
  id BigInt @id @default(autoincrement())

  sender     User     @relation(name: "PrivateMessageSenders", fields: [senderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  senderId   String   @db.VarChar(32)
  receiver   User     @relation(name: "PrivateMessageReceivers", fields: [receiverId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  receiverId String   @db.VarChar(32)
  year       DateTime
  message    String   @db.VarChar(1000)
}

model PublicMessage {
  id         BigInt   @id @default(autoincrement())
  sender     User     @relation(name: "PublicMessageSenders", fields: [senderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  senderId   String   @db.VarChar(32)
  receiver   User     @relation(name: "PublicMessageReceivers", fields: [receiverId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  receiverId String   @db.VarChar(32)
  guildId    String   @db.VarChar(32)
  year       DateTime
  message    String   @db.VarChar(1000)
}
